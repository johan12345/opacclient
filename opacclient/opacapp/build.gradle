import org.json.JSONArray
import org.json.JSONObject

apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'

    defaultConfig {
        applicationId "de.geeksfactory.opacclient"
        minSdkVersion 8
        targetSdkVersion 24
        versionCode 156
        versionName "4.5.13"
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        // disable 'AndroidLintRtlHardcoded' // Throws an "Unknown issue id" for me
        disable 'MissingTranslation'
        disable 'NewApi'  // does not respect our annotations at release time :(
        disable 'UnusedAttribute'
        warning 'InvalidPackage'
    }

    signingConfigs {
        release {
            storeFile file("../../release.keystore")
            storePassword System.getenv("KSTOREPWD")
            keyAlias "opac client"
            keyPassword System.getenv("KSTOREPWD")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.txt'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        encoding 'UTF-8'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    useLibrary 'org.apache.http.legacy'

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile(project(':libopac')) {
        transitive = false
    }
    compile('ch.acra:acra:4.7.0') {
        exclude group: 'org.json', module: 'json'
    }
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.android.support:design:24.0.0'
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:palette-v7:24.0.0'
    compile 'com.android.support:cardview-v7:24.0.0'
    compile 'com.android.support:preference-v7:24.0.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'org.apmem.tools:layouts:1.8@aar'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    compile 'org.apache.httpcomponents:httpmime:4.3.6'
    compile 'net.opacapp:multiline-collapsingtoolbar:1.2.1'
    compile 'joda-time:joda-time:2.8.2'
    compile 'org.joda:joda-convert:1.8'
    compile 'su.j2e:rv-joiner:1.0.6'
    compile 'joda-time:joda-time:2.8.2'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.1.0'
    compile 'com.samskivert:jmustache:1.13'
    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'junit:junit:4.12'

    // We don't want to rely on the CommonsWare Maven repo, so we include these libraries as JARs
    compile files('libs/adapter-1.0.1.jar')
    compile files('libs/endless-1.2.3.jar')
    compile files('libs/cwac-wakeful-1.0.5.jar')
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    jacocoClasspath = configurations['androidJacocoAnt']

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

task downloadJson(type: JsonFilesTask)

class JsonFilesTask extends DefaultTask {
    private static final String API_URL = "https://info.opacapp.net/androidconfig_app/?format=json"
    public static final String BIBS_DIR = "opacapp/src/main/assets/bibs"

    @TaskAction
    def downloadFiles() {
        String response = API_URL.toURL().getText()
        JSONArray data = new JSONArray(response)
        GFileUtils.cleanDirectory(new File(BIBS_DIR))
        for (int i = 0; i < data.length(); i++) {
            JSONObject library = data.get(i);
            String id = library.getString("_id")
            library.remove("_id")
            File file = new File(BIBS_DIR, id + ".json")
            file.write(library.toString(4))
        }
    }
}